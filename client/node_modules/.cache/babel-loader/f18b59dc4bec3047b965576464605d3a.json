{"ast":null,"code":"var _jsxFileName = \"/Users/YoojeongTak/RealMernStack/client/src/components/ComptesBancaires.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst ComptesBancaires = () => {\n  const [comptes, setComptes] = useState([]);\n  const [selectedCompte, setSelectedCompte] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n\n  // Charger les comptes bancaires de l'utilisateur\n  useEffect(() => {\n    const fetchComptes = async () => {\n      try {\n        const res = await axios.get(\"/api/comptes\", {\n          withCredentials: true\n        });\n        setComptes(res.data);\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération des comptes\", err);\n      }\n    };\n    fetchComptes();\n  }, []);\n\n  // Charger les transactions du compte sélectionné\n  const loadTransactions = async compteId => {\n    try {\n      const res = await axios.get(`/api/comptes/${compteId}/transactions`, {\n        withCredentials: true\n      });\n      setTransactions(res.data);\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des transactions\", err);\n    }\n  };\n\n  // Sélectionner un compte pour afficher ses transactions\n  const handleCompteSelect = compte => {\n    setSelectedCompte(compte);\n    loadTransactions(compte._id);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, \"Mes Comptes Bancaires\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, comptes.map(compte => /*#__PURE__*/React.createElement(\"li\", {\n    key: compte._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, compte.nomCompte), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Solde: \", compte.solde, \"\\u20AC\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleCompteSelect(compte),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Voir les transactions\")))), selectedCompte && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, \"Transactions du compte: \", selectedCompte.nomCompte), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, transactions.map(transaction => /*#__PURE__*/React.createElement(\"li\", {\n    key: transaction._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, transaction.typeTransaction === \"débit\" ? \"-\" : \"+\", transaction.montant, \"\\u20AC\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  }, transaction.description))))));\n};\nexport default ComptesBancaires;","map":{"version":3,"names":["React","useEffect","useState","axios","ComptesBancaires","comptes","setComptes","selectedCompte","setSelectedCompte","transactions","setTransactions","fetchComptes","res","get","withCredentials","data","err","console","error","loadTransactions","compteId","handleCompteSelect","compte","_id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","nomCompte","solde","onClick","transaction","typeTransaction","montant","description"],"sources":["/Users/YoojeongTak/RealMernStack/client/src/components/ComptesBancaires.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst ComptesBancaires = () => {\n\tconst [comptes, setComptes] = useState([]);\n\tconst [selectedCompte, setSelectedCompte] = useState(null);\n\tconst [transactions, setTransactions] = useState([]);\n\n\t// Charger les comptes bancaires de l'utilisateur\n\tuseEffect(() => {\n\t\tconst fetchComptes = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(\"/api/comptes\", { withCredentials: true });\n\t\t\t\tsetComptes(res.data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"Erreur lors de la récupération des comptes\", err);\n\t\t\t}\n\t\t};\n\t\tfetchComptes();\n\t}, []);\n\n\t// Charger les transactions du compte sélectionné\n\tconst loadTransactions = async (compteId) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(`/api/comptes/${compteId}/transactions`, {\n\t\t\t\twithCredentials: true,\n\t\t\t});\n\t\t\tsetTransactions(res.data);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Erreur lors de la récupération des transactions\", err);\n\t\t}\n\t};\n\n\t// Sélectionner un compte pour afficher ses transactions\n\tconst handleCompteSelect = (compte) => {\n\t\tsetSelectedCompte(compte);\n\t\tloadTransactions(compte._id);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Mes Comptes Bancaires</h1>\n\t\t\t<ul>\n\t\t\t\t{comptes.map((compte) => (\n\t\t\t\t\t<li key={compte._id}>\n\t\t\t\t\t\t<h3>{compte.nomCompte}</h3>\n\t\t\t\t\t\t<p>Solde: {compte.solde}€</p>\n\t\t\t\t\t\t<button onClick={() => handleCompteSelect(compte)}>\n\t\t\t\t\t\t\tVoir les transactions\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\n\t\t\t{selectedCompte && (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Transactions du compte: {selectedCompte.nomCompte}</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{transactions.map((transaction) => (\n\t\t\t\t\t\t\t<li key={transaction._id}>\n\t\t\t\t\t\t\t\t{transaction.typeTransaction === \"débit\" ? \"-\" : \"+\"}\n\t\t\t\t\t\t\t\t{transaction.montant}€<p>{transaction.description}</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ComptesBancaires;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}